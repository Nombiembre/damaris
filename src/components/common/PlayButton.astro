---
const { src, class: className } = Astro.props;
---

<div
    class={`audio-player rounded-lg`}
>
    <!-- Audio Element -->
    <audio class="audio hidden" src={src}></audio>

    <!-- Play Button -->
    <button
        class={` bg-transparent text-white invisible opacity-0 playBtn cursor-pointer -p-4 ${className}`}
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-10 w-10 "
            viewBox="0 0 20 20"
            fill="currentColor"
        >
            <path
                class=" "
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"
                clip-rule="evenodd"></path>
        </svg>
    </button>
</div>

<style>
    svg {
        display: block;
        margin: 0;
        padding: 0;
    }
</style>

<script>
    document.addEventListener("astro:page-load", () => {
        const players = document.querySelectorAll(
            ".audio-player",
        ) as NodeListOf<HTMLDivElement>;

        players.forEach((player) => {
            const audio = player.querySelector(".audio") as HTMLAudioElement;
            const playBtn = player.querySelector(
                ".playBtn",
            ) as HTMLButtonElement;

            if (!audio || !playBtn) return;

            function togglePlay() {
                if (audio.paused) {
                    // Pausar todos los demÃ¡s audios antes de reproducir uno nuevo
                    players.forEach((p) => {
                        const otherAudio = p.querySelector(
                            ".audio",
                        ) as HTMLAudioElement;
                        const otherPlayBtn = p.querySelector(
                            ".playBtn",
                        ) as HTMLButtonElement;

                        if (otherAudio !== audio) {
                            otherAudio.pause();
                            // Actualizar el icono de los otros botones a "play"
                            otherPlayBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd" />
                </svg>`;
                        }
                    });

                    // Reproducir el audio actual y actualizar su icono a "pause"
                    audio.play();
                    playBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zM7 8a1 1 0 012 0v4a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v4a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
        </svg>`;
                } else {
                    // Pausar el audio actual y actualizar el icono a "play"
                    audio.pause();
                    playBtn.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd" />
        </svg>`;
                }
            }

            playBtn.addEventListener("click", togglePlay);
        });
    });
</script>
